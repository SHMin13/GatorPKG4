subset11<-subset10 %>%
group_by(group) %>%
summarise(
age=round(mean(Age),1),
BMI=round(mean(BMI),1),
Glucose=round(mean(Glucose),1),
Insulin=round(mean(Insulin),1),
HOMA=round(mean(HOMA),1),
Leptin=round(mean(Leptin),1),
Adiponectin=round(mean(Adiponectin),1),
Resistin=round(mean(Resistin),1),
MCP1=round(mean(MCP.1),1)
)
subset12<-t(subset11)[-1,]
colnames(subset12)<-c("Healthy controls","Patients")
subset12
subset11<-subset10 %>%
group_by(group) %>%
summarise(
age=str_c(round(mean(Age),1),"(",round(sd(Age),1)),
BMI=round(mean(BMI),1),
Glucose=round(mean(Glucose),1),
Insulin=round(mean(Insulin),1),
HOMA=round(mean(HOMA),1),
Leptin=round(mean(Leptin),1),
Adiponectin=round(mean(Adiponectin),1),
Resistin=round(mean(Resistin),1),
MCP1=round(mean(MCP.1),1)
)
subset12<-t(subset11)[-1,]
colnames(subset12)<-c("Healthy controls","Patients")
gc()
subset12<-t(subset11)[-1,]
colnames(subset12)<-c("Healthy controls","Patients")
subset12
subset11<-subset10 %>%
group_by(group) %>%
summarise(
age=str_c(round(mean(Age),1),"(",round(sd(Age),1),")"),
BMI=round(mean(BMI),1),
Glucose=round(mean(Glucose),1),
Insulin=round(mean(Insulin),1),
HOMA=round(mean(HOMA),1),
Leptin=round(mean(Leptin),1),
Adiponectin=round(mean(Adiponectin),1),
Resistin=round(mean(Resistin),1),
MCP1=round(mean(MCP.1),1)
)
subset12<-t(subset11)[-1,]
colnames(subset12)<-c("Healthy controls","Patients")
subset12
subset10
subset10<-subset4[,-10]
subset10
subset11<-subset10 %>%
group_by(group) %>%
summarise(
age=str_c(round(mean(Age),1),"(",round(sd(Age),1),")"),
BMI=str_c(round(mean(BMI),1),"(",round(sd(BMI),1),")"),
Glucose=str_c(round(mean(Glucose),1),"(",round(sd(Glucose),1),")"),
Insulin=str_c(round(mean(Insulin),1),"(",round(sd(Insulin),1),")"),
HOMA=str_c(round(mean(HOMA),1),"(",round(sd(HOMA),1),")"),
Leptin=str_c(round(mean(Leptin),1),"(",round(sd(Leptin),1),")"),
Adiponectin=str_c(round(mean(Adiponectin),1),"(",round(sd(Adiponectin),1),")"),
Resistin=str_c(round(mean(Resistin),1),"(",round(sd(Resistin),1),")"),
MCP1=str_c(round(mean(MCP.1),1),"(",round(sd(MCP.1),1),")")
)
subset12<-t(subset11)[-1,]
colnames(subset12)<-c("Healthy controls","Patients")
subset12
Wildvec1
typeofe(subset12)
typeof(subset12)
str)(subset12
str(subset12)
str(Wildvec1)
subset13<-as.data.frame(subset12)
str(Wildvec1)
subset13
Wildvec2<-as.data.frame(Wildvec1)
Wildvec2
subset14<-cbind(subset13,pvalues)
pvalues<-as.data.frame(Wildvec1)
subset14<-cbind(subset13,pvalues)
subset10<-subset4[,-10]
subset10
subset11<-subset10 %>%
group_by(group) %>%
summarise(
age=str_c(round(mean(Age),1),"(",round(sd(Age),1),")"),
BMI=str_c(round(mean(BMI),1),"(",round(sd(BMI),1),")"),
Glucose=str_c(round(mean(Glucose),1),"(",round(sd(Glucose),1),")"),
Insulin=str_c(round(mean(Insulin),1),"(",round(sd(Insulin),1),")"),
HOMA=str_c(round(mean(HOMA),1),"(",round(sd(HOMA),1),")"),
Leptin=str_c(round(mean(Leptin),1),"(",round(sd(Leptin),1),")"),
Adiponectin=str_c(round(mean(Adiponectin),1),"(",round(sd(Adiponectin),1),")"),
Resistin=str_c(round(mean(Resistin),1),"(",round(sd(Resistin),1),")"),
MCP1=str_c(round(mean(MCP.1),1),"(",round(sd(MCP.1),1),")")
)
subset12<-t(subset11)[-1,]
colnames(subset12)<-c("Healthy controls","Patients")
subset13<-as.data.frame(subset12)
subset13
str(Wildvec1)
pvalues<-as.data.frame(Wildvec1)
subset14<-cbind(subset13,pvalues)
subset14
subset14<-cbind(subset13,round(pvalues,3))
subset14
pvalues<-Wildvec1
pvaluess<-as.data.frame(pvalues)
subset14<-cbind(subset13,round(pvalues,3))
subset14
pvaluess<-as.data.frame(round(pvalues,3))
subset14<-cbind(subset13,pvaluess)
subset14
pvaluess<-as.data.frame(pvalues)
subset14<-cbind(subset13,round(pvaluess,3))
subset14
pvalues<-Wildvec1
pvalues
if(pvalues[i]<0.05){
pvalues[i]+"*"
}
pvalues
pvalues<-Wildvec1
str(pvalues)
char(pvalues)
as.character(pvalues)
for(i in 1:9){
if(pvalues[i]<0.05){
pvalues[i]+"*"
}
}
pvalues<-Wildvec1
pvalues<-Wildvec1
for(i in 1:9){
if(pvalues[i]<0.05){
str_c(pvalues[i],"*")
}
}
pvalues
round(pvalues,3)
for(i in 1:9){
if(pvalues[i]<0.05){
str_c(pvalues[i],"*")
}
}
pvalues
pvalues<-Wildvec1
round(pvalues,3)
pvalues<-Wildvec1
pvalues3<-round(pvalues,3)
for(i in 1:9){
if(pvalues3[i]<0.05){
str_c(pvalues3[i],"*")
}
}
pvalues3
pvalues3
pvalues3[3]
pvalues3[4]
for(i in 1:9){
if(pvalues3[i]<0.05){
str_c(pvalues3[i],"*","as")
}
}
pvalues3
pvalues3<-round(pvalues,3)
for(i in 1:9){
if(pvalues3[i]<0.05){
str_glue(pvalues3[i],"*")
}
}
pvalues3
for(i in 1:9){
if(pvalues3[i]<0.05){
unite(pvalues3[i],"*")
}
}
str_c(pvalues3[i],"*")
for(i in 1:9){
if(pvalues3[i]<0.05){
pvalue4[i]<-str_c(pvalues3[i],"*")
}
}
pvalues4[1:9]
pvalues4<-seq(1:9)
pvalues
pvalues4
pvalues<-Wildvec1
pvalues3<-round(pvalues,3)
pvalues4<-seq(1:9)
for(i in 1:9){
if(pvalues3[i]<0.05){
pvalue4[i]<-str_c(pvalues3[i],"*")
}
}
pvalues4[i]<-str_c(pvalues3[i],"*")
for(i in 1:9){
if(pvalues3[i]<0.05){
pvalues4[i]<-str_c(pvalues3[i],"*")
}
}
pvalues4
pvalues<-Wildvec1
pvalues3<-round(pvalues,3)
for(i in 1:9){
if(pvalues3[i]<0.05){
pvalues3[i]<-str_c(pvalues3[i],"*")
}
}
pvalues3
subset13
subset13<-as.data.frame(subset12)
subset13
subset10<-subset4[,-10]
subset10
subset11<-subset10 %>%
group_by(group) %>%
summarise(
age=str_c(round(mean(Age),1),"(",round(sd(Age),1),")"),
BMI=str_c(round(mean(BMI),1),"(",round(sd(BMI),1),")"),
Glucose=str_c(round(mean(Glucose),1),"(",round(sd(Glucose),1),")"),
Insulin=str_c(round(mean(Insulin),1),"(",round(sd(Insulin),1),")"),
HOMA=str_c(round(mean(HOMA),1),"(",round(sd(HOMA),1),")"),
Leptin=str_c(round(mean(Leptin),1),"(",round(sd(Leptin),1),")"),
Adiponectin=str_c(round(mean(Adiponectin),1),"(",round(sd(Adiponectin),1),")"),
Resistin=str_c(round(mean(Resistin),1),"(",round(sd(Resistin),1),")"),
MCP1=str_c(round(mean(MCP.1),1),"(",round(sd(MCP.1),1),")")
)
subset12<-t(subset11)[-1,]
colnames(subset12)<-c("Healthy controls","Patients")
subset13<-as.data.frame(subset12)
subset13
pvalues<-Wildvec1
pvalues2<-round(pvalues,3)
for(i in 1:9){
if(pvalues3[i]<0.05){
pvalues2[i]<-str_c(pvalues2[i],"*")
}
}
pvalues2
pvalues3<-as.data.frame(pvalues2)
pavlues3
pvalues3
subset14<-cbind(subset13,pvalues3)
subset14
print(subset14)
print(subset14)
knitr::opts_chunk$set(echo = TRUE)
options(stringsAsFactors = F) ## to prevent numeric values as factors, if you use read.csv
library(tidyverse)
library(ggrepel)
library(gplots)
subdata1
q<-"https://raw.githubusercontent.com/Caleb-Huo/Caleb-Huo.github.io/master/teaching/data/BreastCancer/dataR2.csv"
data0<-read_csv(q)
subdata0<-data0 %>% select(1:4) %>% slice(1:3)
subdata0
subdata1<-data0 %>% filter(Age<=60,Glucose>=100)
subdata1
subdata2<-subdata1 %>% filter(Classification==1)
nrow(subdata2)/nrow(subdata1)*100
nrow(subdata1)
vfunc<-function(x){
if(!is.vector(x))
stop("Not a vector")
if(!all(x>=0)){
print("Warning: There is/are negative value/s in the vector")
}
Max<-max(x)
Min<-min(x)
Mean<-mean(x)
Median<-median(x)
Range<-range(x)
IQR<-IQR(x)
out<-list(Max=Max,Min=Min,Mean=Mean,Median=Median,Range=c(Range[1],Range[2]),IQR=IQR)
return(out)
}
Resdata0<-data0 %>% pull('Resistin')
vfunc(Resdata0)
hist(data0$Adiponectin,
prob=TRUE,
col="blue",
nclass = 50,
main = "Histogram of Adiponectin density",
xlab="Adiponectin (Âµg/mL)")
lines(density(data0$Adiponectin), col="red")
subset3<-data0 %>% pull(MCP.1)
head(subset3)
leted<-chartr("0123456789","AAAAABBBBB",subset3)
leted[1:4]# 4 instances
print(leted[1:4])# 4 instances
sum(lengths(regmatches(leted,gregexpr("A",leted))))-sum(lengths(regmatches(leted,gregexpr("B",leted))))
sum(str_count(leted,"A"))-sum(str_count(leted,"B"))#difference betweeen the instances of letter A than letter B
print(leted[1:4])# 4 instances
subset4<-data0
subset4$group<-ifelse(subset4$Classification==1,"Healthy controls","Patients")
ggplot(data=subset4)+
aes(x=Glucose,y=Insulin,color=group)+
geom_point()+
geom_smooth(aes(group=group),method="lm")
subset5<-subset4
subset5$Agegroup<-ifelse(subset5$Age<=60,"Younger or equal to 60","Older than 60")
boxplt<-ggplot(data=subset5)+
aes(group,HOMA)+
geom_boxplot(aes(fill=group))+
facet_wrap(~Agegroup)+
theme(axis.title.y=element_text(colour="red"))
boxplt
subset6<-subset5 %>% arrange(Age,desc(Adiponectin))
subset6[1:5,8]
print(subset6[1:5,8])
subset7<-data0 %>% slice(which(Classification==1))
subset7.2 <-subset7[,-10]
subset7.2
subset8<-data0 %>% slice(which(Classification==2))
subset8.2<-subset8[,-10]
subset8.2
Wildvec1<-seq(1:9)
Wildvec1[1]<-wilcox.test(subset7.2$Age,subset8.2$Age)$p.value
Wildvec1[2]<-wilcox.test(subset7.2$BMI,subset8.2$BMI)$p.value
Wildvec1[3]<-wilcox.test(subset7.2$Glucose,subset8.2$Glucose)$p.value
Wildvec1[4]<-wilcox.test(subset7.2$Insulin,subset8.2$Insulin)$p.value
Wildvec1[5]<-wilcox.test(subset7.2$HOMA,subset8.2$HOMA)$p.value
Wildvec1[6]<-wilcox.test(subset7.2$Leptin,subset8.2$Leptin)$p.value
Wildvec1[7]<-wilcox.test(subset7.2$Adiponectin,subset8.2$Adiponectin)$p.value
Wildvec1[8]<-wilcox.test(subset7.2$Resistin,subset8.2$Resistin)$p.value
Wildvec1[9]<-wilcox.test(subset7.2$MCP.1,subset8.2$MCP.1)$p.value
Wildvec1
qvalues1<-p.adjust(Wildvec1,method = "BH")
qvalues1
which(qvalues1<0.05)
subset7<-data0 %>% slice(which(Classification==1))
subset7.2 <-subset7[,-10]
subset8<-data0 %>% slice(which(Classification==2))
subset8.2<-subset8[,-10]
Wildvec1<-seq(1:9)
Wildvec1[1]<-wilcox.test(subset7.2$Age,subset8.2$Age)$p.value
Wildvec1[2]<-wilcox.test(subset7.2$BMI,subset8.2$BMI)$p.value
Wildvec1[3]<-wilcox.test(subset7.2$Glucose,subset8.2$Glucose)$p.value
Wildvec1[4]<-wilcox.test(subset7.2$Insulin,subset8.2$Insulin)$p.value
Wildvec1[5]<-wilcox.test(subset7.2$HOMA,subset8.2$HOMA)$p.value
Wildvec1[6]<-wilcox.test(subset7.2$Leptin,subset8.2$Leptin)$p.value
Wildvec1[7]<-wilcox.test(subset7.2$Adiponectin,subset8.2$Adiponectin)$p.value
Wildvec1[8]<-wilcox.test(subset7.2$Resistin,subset8.2$Resistin)$p.value
Wildvec1[9]<-wilcox.test(subset7.2$MCP.1,subset8.2$MCP.1)$p.value
Wildvec1
qvalues1<-p.adjust(Wildvec1,method = "BH")
qvalues1
which(qvalues1<0.05)
mean1<-as.data.frame(apply(subset7.2,2,mean))
colnames(mean1)
mean2<-as.data.frame(apply(subset8.2,2,mean))
remean1<-mean1 %>% rename(Healthy_controls="apply(subset7.2, 2, mean)")
remean2<-mean2 %>% rename(Patients="apply(subset8.2, 2, mean)")
merged<-merge(remean1,remean2,by='row.names')
merged
merged[1:4,]
merged
rownames(merged)
rownames(merged)<-merged[,1]
merged
merged2<-merged[,-1]
merged2
merged2<-as.matrix(merged[,-1])
merged2
str(merged2)
merged2
merged2[1:4,]
print(merged2[1:4,])
subset10<-subset4[,-10]
subset10
subset11<-subset10 %>%
group_by(group) %>%
summarise(
age=str_c(round(mean(Age),1),"(",round(sd(Age),1),")"),
BMI=str_c(round(mean(BMI),1),"(",round(sd(BMI),1),")"),
Glucose=str_c(round(mean(Glucose),1),"(",round(sd(Glucose),1),")"),
Insulin=str_c(round(mean(Insulin),1),"(",round(sd(Insulin),1),")"),
HOMA=str_c(round(mean(HOMA),1),"(",round(sd(HOMA),1),")"),
Leptin=str_c(round(mean(Leptin),1),"(",round(sd(Leptin),1),")"),
Adiponectin=str_c(round(mean(Adiponectin),1),"(",round(sd(Adiponectin),1),")"),
Resistin=str_c(round(mean(Resistin),1),"(",round(sd(Resistin),1),")"),
MCP1=str_c(round(mean(MCP.1),1),"(",round(sd(MCP.1),1),")")
)
subset12<-t(subset11)[-1,]
colnames(subset12)<-c("Healthy controls(Mean(SD))","Patients(Mean(SD))")
subset13<-as.data.frame(subset12)
subset13
pvalues<-Wildvec1
pvalues2<-round(pvalues,3)
for(i in 1:9){
if(pvalues2[i]<0.05){
pvalues2[i]<-str_c(pvalues2[i],"*")
}
}
pvalues2
pvalues3<-as.data.frame(pvalues2)
subset14<-cbind(subset13,pvalues3)
subset14
print(subset14)
subset12<-t(subset11)[-1,]
colnames(subset12)<-c("Healthy controls(Mean(SD))","Patients(Mean(SD))")
subset13<-as.data.frame(subset12)
subset13
pvalues<-Wildvec1
pvalues2<-round(pvalues,3)
for(i in 1:9){
if(pvalues2[i]<0.05){
pvalues2[i]<-str_c(pvalues2[i],"*")
}
}
pvalues2
pvalues3<-as.data.frame(pvalues2)
subset14<-cbind(subset13,pvalues3)
subset14
subset12
subset10<-subset4[,-10]
subset11<-subset10 %>%#setting up mean and sd through group by and summarize.
group_by(group) %>%
summarise(
age=str_c(round(mean(Age),1),"(",round(sd(Age),1),")"),
BMI=str_c(round(mean(BMI),1),"(",round(sd(BMI),1),")"),
Glucose=str_c(round(mean(Glucose),1),"(",round(sd(Glucose),1),")"),
Insulin=str_c(round(mean(Insulin),1),"(",round(sd(Insulin),1),")"),
HOMA=str_c(round(mean(HOMA),1),"(",round(sd(HOMA),1),")"),
Leptin=str_c(round(mean(Leptin),1),"(",round(sd(Leptin),1),")"),
Adiponectin=str_c(round(mean(Adiponectin),1),"(",round(sd(Adiponectin),1),")"),
Resistin=str_c(round(mean(Resistin),1),"(",round(sd(Resistin),1),")"),
MCP1=str_c(round(mean(MCP.1),1),"(",round(sd(MCP.1),1),")")
)#used str_c to make the form.
subset12<-t(subset11)[-1,]#transposed show healthy controls and patients as the columns
colnames(subset12)<-c("Healthy controls(Mean(SD))","Patients(Mean(SD))")#added column names
subset13<-as.data.frame(subset12)#changed to data frame
pvalues<-Wildvec1#vector of pvalues
pvalues2<-round(pvalues,3)
#for loop makes a new vector where p-values smaller than 0.05 would have asterisk added.
for(i in 1:9){
if(pvalues2[i]<0.05){
pvalues2[i]<-str_c(pvalues2[i],"*")
}
}
pvalues2
pvalues3<-as.data.frame(pvalues2)
subset14<-cbind(subset13,pvalues3)#combine the mean and sd table with pvalue table
print(subset14)
op <- par(mar = c(10, 4, 4, 2) + 0.1)
op
barplot(mtcars$mpg, names.arg = row.names(mtcars), las = 2, ylab = "Fuel Efficiency in Miles per Gallon")
pairs(mtcars[1:7], lower.panel = NULL)
split_size=0.8
sample_size=floor(split_size*nrow(mtcars))
sample_size
set seed(123)
train_indices<-sample(seq_len(nrow(mtcars)),size=sample_size)
set_seed(123)
set.seed(123)
train_indices<-sample(seq_len(nrow(mtcars)),size=sample_size)
train_indices<-sample(seq_len(nrow(mtcars)),size=sample_size)
train<-mtcards[train_indices,]
test<-mtcars[-train_indices,]
train<-mtcars[train_indices,]
predict?
?predict
?predict()
model2<-lm(mpg~disp,data=train)
new.data<-data.frame(disp=test$disp)
test
train
test$output<-predict(model2,new.data)
test
sqrt(sum(test$mpg-test$output)^2/nrow(test))
model2<-lm(mpg~disp,data=train)
new.data<-data.frame(disp=test$disp)
test$output<-predict(model2,new.data)
sqrt(sum(test$mpg-test$output)^2/nrow(test))
sqrt(sum(test$mpg-test$output)^2/nrow(test))
set.seed(123)
train_indices<-sample(seq_len(nrow(mtcars)),size=sample_size)
train<-mtcars[train_indices,]
test<-mtcars[-train_indices,]
model2<-lm(mpg~disp,data=train)
new.data<-data.frame(disp=test$disp)
test$output<-predict(model2,new.data)
sqrt(sum(test$mpg-test$output)^2/nrow(test))
split_size=0.8
sample_size=floor(split_size*nrow(mtcars))
set.seed(123)
train_indices<-sample(seq_len(nrow(mtcars)),size=sample_size)
train<-mtcars[train_indices,]
test<-mtcars[-train_indices,]
model2<-lm(mpg~disp,data=train)
new.data<-data.frame(disp=test$disp)
test$output<-predict(model2,new.data)
sqrt(sum(test$mpg-test$output)^2/nrow(test))
set.seed(123)
model2 <- lm(mpg ~ disp, data = train)
new.data <- data.frame(disp = test$disp)
test$output <- predict(model2, new.data)
sqrt(sum(test$mpg - test$output)^2/nrow(test))
library(GatorPKG3)
help(package="GatorPKG3")
xxxx <- sample(1000)
usethis::use_data(xxxx)
WD2<-'C:/Users/seong/Desktop/GatorPKG3'
setwd(WD2)
xxxx <- sample(1000)
usethis::use_data(xxxx)
devtools::document()
devtools::install()
